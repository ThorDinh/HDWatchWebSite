/*
 * Created on 2023-06-10 ( 09:58:22 )
 * Generated by Telosys ( http://www.telosys.org/ ) version 3.3.0
 */
package com.hdwatch.entity;

import java.io.Serializable;
import java.util.Date;
import java.util.List;
import javax.persistence.*;

import lombok.Data;

/**
 * JPA entity class for "Products"
 *
 * @author Telosys
 *
 */
@Data
@Entity
@Table(name="products", schema="dbo", catalog="HDWatch" )
public class Products implements Serializable {

    private static final long serialVersionUID = 1L;

    //--- ENTITY PRIMARY KEY 
    @Id
    @GeneratedValue(strategy=GenerationType.AUTO)
    @Column(name="id", nullable=false)
    private Integer    id ;

    //--- ENTITY DATA FIELDS 
    @Column(name="name", nullable=false, length=2147483647)
    private String     name ;

    @Column(name="price", nullable=false)
    private Double     price ;

    @Column(name="oldPrice", nullable=false)
    private Double     oldprice ;

    @Column(name="available", nullable=false)
    private Boolean    available ;

    @Temporal(TemporalType.DATE)
    @Column(name="createDate", nullable=false)
    private Date       createdate ;

    @Column(name="brandId", nullable=false)
    private Integer    brandid ;

    @Column(name="categoryId", nullable=false)
    private Integer    categoryid ;

    @Column(name="stock", nullable=false)
    private Integer    stock ;

    @Column(name="description", length=2147483647)
    private String     description ;


    //--- ENTITY LINKS ( RELATIONSHIP )
    @OneToMany(mappedBy="products")
    private List<Productimages> listOfProductimages ; 

    @ManyToOne
    @JoinColumn(name="brandId", referencedColumnName="id", insertable=false, updatable=false)
    private Brands     brands ; 

    @OneToMany(mappedBy="products")
    private List<Cartdetails> listOfCartdetails ; 

    @ManyToOne
    @JoinColumn(name="categoryId", referencedColumnName="id", insertable=false, updatable=false)
    private Categories categories ; 

    @OneToMany(mappedBy="products")
    private List<Favoritedetails> listOfFavoritedetails ; 

    @OneToMany(mappedBy="products")
    private List<Orderdetails> listOfOrderdetails ; 

}
